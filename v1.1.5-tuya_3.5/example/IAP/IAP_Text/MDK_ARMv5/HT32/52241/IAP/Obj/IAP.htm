<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HT32\52241\IAP\Obj\IAP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HT32\52241\IAP\Obj\IAP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Aug 31 15:50:53 2021
<BR><P>
<H3>Maximum Stack Usage =        100 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; IAP_Write_Flash &rArr; mcu_flash_write_iap &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8]">BootProcess</a> from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8) referenced from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
 <LI><a href="#[2]">HardFault_Handler</a> from iap_ht32f5xxxx_01_it.o(i.HardFault_Handler) referenced from startup_ht32f5xxxx_01_iap.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8) referenced from startup_ht32f5xxxx_01_iap.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8) referenced from startup_ht32f5xxxx_01_iap.o(RESET)
 <LI><a href="#[c]">Reset_Handler</a> from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8) referenced from startup_ht32f5xxxx_01_iap.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8) referenced from startup_ht32f5xxxx_01_iap.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8) referenced from startup_ht32f5xxxx_01_iap.o(RESET)
 <LI><a href="#[9]">SystemInit</a> from iap_system_ht32f5xxxx_02.o(i.SystemInit) referenced from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
 <LI><a href="#[7]">UxART_IRQHandler</a> from iap_ht32f5xxxx_01_it.o(i.UxART_IRQHandler) referenced from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
 <LI><a href="#[a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
 <LI><a href="#[b]">fputc</a> from main_callfun.o(i.fputc) referenced from printfb.o(i.__0printf$bare)
 <LI><a href="#[6]">main</a> from iap_main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
</UL>
<P><STRONG><a name="[35]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[11]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[36]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[37]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[38]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[39]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[3a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[20]"></a>IAP_GoCMD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, iap_handler.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Go
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[15]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_IAP_CRC
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[f]"></a>CKCU_Configuration</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, iap_main.o(i.CKCU_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CKCU_Configuration &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>USART_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[3c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write_iap
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_read_iap
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_Flash_Data
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>AFIO_GPxConfig</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, ht32f5xxxx_gpio.o(i.AFIO_GPxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[12]"></a>CKCU_GetClocksFrequency</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ht32f5xxxx_ckcu.o(i.CKCU_GetClocksFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPLLFrequency
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
</UL>

<P><STRONG><a name="[13]"></a>CKCU_GetPLLFrequency</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(i.CKCU_GetPLLFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[16]"></a>CKCU_GetPeripFrequency</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ht32f5xxxx_ckcu.o(i.CKCU_GetPeripFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[10]"></a>CKCU_PeripClockConfig</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, ht32f5xxxx_ckcu.o(i.CKCU_PeripClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_Configuration
</UL>

<P><STRONG><a name="[17]"></a>CMP_IAP_CRC</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, main_callfun.o(i.CMP_IAP_CRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CMP_IAP_CRC &rArr; crc32_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_read_jiaoyan
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_compute
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Write_Flash
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>FLASH_ErasePage</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, ht32f5xxxx_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForOperationEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZXW_IAP_Erase
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>FLASH_GetOptionByteStatus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ht32f5xxxx_flash.o(i.FLASH_GetOptionByteStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_GetOptionByteStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write_iap
</UL>

<P><STRONG><a name="[1c]"></a>FLASH_ProgramWordData</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ht32f5xxxx_flash.o(i.FLASH_ProgramWordData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForOperationEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write_iap
</UL>

<P><STRONG><a name="[1b]"></a>FLASH_WaitForOperationEnd</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ht32f5xxxx_flash.o(i.FLASH_WaitForOperationEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForOperationEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, iap_ht32f5xxxx_01_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>IAP_Go</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, iap_handler.o(i.IAP_Go))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IAP_Go &rArr; USART_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_GoCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>IAP_Write_Flash</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, flash_copy.o(i.IAP_Write_Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = IAP_Write_Flash &rArr; mcu_flash_write_iap &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write_iap
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_read_iap
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZXW_IAP_Erase
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_IAP_CRC
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>NVIC_Configuration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, iap_main.o(i.NVIC_Configuration))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Go
</UL>

<P><STRONG><a name="[25]"></a>RSTCU_PeripReset</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, ht32f5xxxx_rstcu.o(i.RSTCU_PeripReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[9]"></a>SystemInit</STRONG> (Thumb, 224 bytes, Stack size 20 bytes, iap_system_ht32f5xxxx_02.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
</UL>
<P><STRONG><a name="[1e]"></a>USART_DeInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ht32f5xxxx_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Go
</UL>

<P><STRONG><a name="[26]"></a>USART_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ht32f5xxxx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[33]"></a>USART_IntConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[29]"></a>USART_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[34]"></a>USART_TxRxCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_TxRxCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[7]"></a>UxART_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, iap_ht32f5xxxx_01_it.o(i.UxART_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
</UL>
<P><STRONG><a name="[22]"></a>_ZXW_IAP_Erase</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, flash_copy.o(i._ZXW_IAP_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _ZXW_IAP_Erase &rArr; FLASH_ErasePage &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Write_Flash
</UL>

<P><STRONG><a name="[27]"></a>__0printf$bare</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[40]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[2f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ht32f5xxxx_ckcu.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[41]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[42]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b]"></a>fputc</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main_callfun.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL>
<P><STRONG><a name="[2b]"></a>get_AP_info</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main_callfun.o(i.get_AP_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_AP_info &rArr; read_Flash_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_Flash_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, iap_main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = main &rArr; IAP_Write_Flash &rArr; mcu_flash_write_iap &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_AP_info
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Write_Flash
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Go
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_IAP_CRC
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_Configuration
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[23]"></a>mcu_flash_read_iap</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, flash_copy.o(i.mcu_flash_read_iap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mcu_flash_read_iap
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Write_Flash
</UL>

<P><STRONG><a name="[18]"></a>mcu_flash_read_jiaoyan</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main_callfun.o(i.mcu_flash_read_jiaoyan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mcu_flash_read_jiaoyan
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_IAP_CRC
</UL>

<P><STRONG><a name="[24]"></a>mcu_flash_write_iap</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, flash_copy.o(i.mcu_flash_write_iap))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mcu_flash_write_iap &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetOptionByteStatus
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Write_Flash
</UL>

<P><STRONG><a name="[2c]"></a>read_Flash_Data</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, main_callfun.o(i.read_Flash_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = read_Flash_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_AP_info
</UL>

<P><STRONG><a name="[2e]"></a>usart0_init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, iap_main.o(i.usart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = usart0_init &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxRxCmd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IntConfig
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[19]"></a>crc32_compute</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, main_callfun.o(i.crc32_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_IAP_CRC
</UL>

<P><STRONG><a name="[8]"></a>BootProcess</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01_iap.o(.ARM.__AT_0x000000A8)
</UL>
<P><STRONG><a name="[28]"></a>_printf_core</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
