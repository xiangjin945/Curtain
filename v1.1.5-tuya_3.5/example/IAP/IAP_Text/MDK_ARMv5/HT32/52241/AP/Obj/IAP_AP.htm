<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HT32\52241\AP\Obj\IAP_AP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HT32\52241\AP\Obj\IAP_AP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Aug 31 15:50:55 2021
<BR><P>
<H3>Maximum Stack Usage =        468 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; I4_ProductionTest &rArr; bt_uart_service &rArr; data_handle &rArr; mcu_ota_proc &rArr; mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[23]">AES_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">AES_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_IRQHandler</a> from ht32f5xxxx_01_it.o(i.ADC_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[14]">BFTM0_IRQHandler</a> from ht32f5xxxx_01_it.o(i.BFTM0_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[15]">BFTM1_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[1d]">BootProcess</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[9]">EVWUP_IRQHandler</a> from ht32f5xxxx_01_it.o(i.EVWUP_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from ht32f5xxxx_01_it.o(i.EXTI0_1_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from ht32f5xxxx_01_it.o(i.EXTI2_3_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from ht32f5xxxx_01_it.o(i.EXTI4_15_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[f]">GPTM0_IRQHandler</a> from ht32f5xxxx_01_it.o(i.GPTM0_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ht32f5xxxx_01_it.o(i.HardFault_Handler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[16]">I2C0_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[6]">LVD_BOD_IRQHandler</a> from ht32f5xxxx_01_it.o(i.LVD_BOD_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[e]">MCTM0_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from ht32f5xxxx_01_it.o(i.NMI_Handler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from ht32f5xxxx_01_it.o(i.PendSV_Handler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from ht32f5xxxx_01_it.o(i.RTC_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[22]">Reset_Handler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[10]">SCTM0_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[11]">SCTM1_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[12]">SCTM2_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[13]">SCTM3_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[18]">SPI0_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from startup_ht32f5xxxx_01.o(RESET) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from ht32f5xxxx_01_it.o(i.SVC_Handler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from ht32f5xxxx_01_it.o(i.SysTick_Handler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[1e]">SystemInit</a> from system_ht32f5xxxx_02.o(i.SystemInit) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[1b]">UART0_IRQHandler</a> from ht32f5xxxx_01_it.o(i.UART0_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[1c]">UART1_IRQHandler</a> from ht32f5xxxx_01_it.o(i.UART1_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[1a]">USART0_IRQHandler</a> from ht32f5xxxx_01_it.o(i.USART0_IRQHandler) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[1f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ht32f5xxxx_01.o(RESET)
 <LI><a href="#[21]">fputc</a> from main_callfun.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[20]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))

<P><STRONG><a name="[23]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_IRQHandler
</UL>

<P><STRONG><a name="[15]"></a>BFTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[16]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[27]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[e]"></a>MCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MIDI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[29]"></a>PDMA_CH0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2a]"></a>PDMA_CH2_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2b]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2c]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2d]"></a>QSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[2e]"></a>SCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[10]"></a>SCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SCTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SCTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SCTM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[30]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[32]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[1f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[12f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[130]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[131]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[132]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[133]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[134]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[135]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gptm0_onfiguration
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bftm_onfiguration
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CourseDirection
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[136]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_ldivmod</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_atoll
</UL>

<P><STRONG><a name="[137]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>isdigit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, isdigit_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isdigit
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_atoll
</UL>

<P><STRONG><a name="[3d]"></a>isspace</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, isspace_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_atoll
</UL>

<P><STRONG><a name="[3e]"></a>localtime</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, localtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = localtime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_Timecallback
</UL>

<P><STRONG><a name="[eb]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_read
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
</UL>

<P><STRONG><a name="[ec]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[13b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[119]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountdownFlashDataHandle
</UL>

<P><STRONG><a name="[13c]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
</UL>

<P><STRONG><a name="[6d]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
</UL>

<P><STRONG><a name="[13e]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
</UL>

<P><STRONG><a name="[13f]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[140]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__ctype_lookup</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isdigit
</UL>

<P><STRONG><a name="[141]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[43]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[142]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[143]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>ADC_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[4b]"></a>ADC_DeInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ht32f5xxxx_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[d]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>ADC_IntConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(i.ADC_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[be]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ht32f5xxxx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[bd]"></a>ADC_RegularGroupConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(i.ADC_RegularGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[bf]"></a>ADC_RegularTrigConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(i.ADC_RegularTrigConfig))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[c2]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_adc.o(i.ADC_SoftwareStartConvCmd))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[66]"></a>AFIO_EXTISourceConfig</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ht32f5xxxx_gpio.o(i.AFIO_EXTISourceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AFIO_EXTISourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
</UL>

<P><STRONG><a name="[64]"></a>AFIO_GPxConfig</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, ht32f5xxxx_gpio.o(i.AFIO_GPxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i4_GPIO_PIN_SET
</UL>

<P><STRONG><a name="[14]"></a>BFTM0_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.BFTM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BFTM0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>BFTM_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(i.BFTM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM0_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>BFTM_EnaCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(i.BFTM_EnaCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bftm_onfiguration
</UL>

<P><STRONG><a name="[c8]"></a>BFTM_IntConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(i.BFTM_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bftm_onfiguration
</UL>

<P><STRONG><a name="[ca]"></a>BFTM_OneShotModeCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(i.BFTM_OneShotModeCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bftm_onfiguration
</UL>

<P><STRONG><a name="[c6]"></a>BFTM_SetCompare</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(i.BFTM_SetCompare))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bftm_onfiguration
</UL>

<P><STRONG><a name="[c7]"></a>BFTM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_bftm.o(i.BFTM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bftm_onfiguration
</UL>

<P><STRONG><a name="[121]"></a>CKCU_GetClockReadyStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(i.CKCU_GetClockReadyStatus))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[4e]"></a>CKCU_GetClocksFrequency</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ht32f5xxxx_ckcu.o(i.CKCU_GetClocksFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPLLFrequency
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
</UL>

<P><STRONG><a name="[4f]"></a>CKCU_GetPLLFrequency</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ht32f5xxxx_ckcu.o(i.CKCU_GetPLLFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>

<P><STRONG><a name="[51]"></a>CKCU_GetPeripFrequency</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ht32f5xxxx_ckcu.o(i.CKCU_GetPeripFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[62]"></a>CKCU_PeripClockConfig</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, ht32f5xxxx_ckcu.o(i.CKCU_PeripClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gptm0_onfiguration
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
</UL>

<P><STRONG><a name="[54]"></a>Coundownflag_EraseWrite</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tst_function.o(i.Coundownflag_EraseWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Coundownflag_EraseWrite &rArr; WriteFlashGlobalCallBack &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashGlobalCallBack
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[57]"></a>Coundownswitch_EraseWrite</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tst_function.o(i.Coundownswitch_EraseWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Coundownswitch_EraseWrite &rArr; WriteFlashGlobalCallBack &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashGlobalCallBack
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[58]"></a>CountdownFlashDataHandle</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, head.o(i.CountdownFlashDataHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CountdownFlashDataHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_setup_interrupt
</UL>

<P><STRONG><a name="[f0]"></a>CurtainModeEraseWrite</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tst_function.o(i.CurtainModeEraseWrite))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[9]"></a>EVWUP_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.EVWUP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EVWUP_IRQHandler &rArr; tybn1_out_sleep_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tybn1_out_sleep_mode
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_WakeupEventIntConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearWakeupFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EXTI0_1_IRQHandler &rArr; WAKEUP_Button_Process &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_Button_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EXTI2_3_IRQHandler &rArr; WAKEUP_Button_Process &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_Button_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EXTI4_15_IRQHandler &rArr; WAKEUP_Button_Process &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_Button_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[b9]"></a>EXTI_ClearEdgeFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(i.EXTI_ClearEdgeFlag))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_Button_Process
</UL>

<P><STRONG><a name="[5f]"></a>EXTI_ClearWakeupFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(i.EXTI_ClearWakeupFlag))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVWUP_IRQHandler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[b8]"></a>EXTI_GetEdgeStatus</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ht32f5xxxx_exti.o(i.EXTI_GetEdgeStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_GetEdgeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_Button_Process
</UL>

<P><STRONG><a name="[100]"></a>EXTI_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
</UL>

<P><STRONG><a name="[101]"></a>EXTI_IntConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(i.EXTI_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
</UL>

<P><STRONG><a name="[68]"></a>EXTI_WakeupEventConfig</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ht32f5xxxx_exti.o(i.EXTI_WakeupEventConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_WakeupEventConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
</UL>

<P><STRONG><a name="[5e]"></a>EXTI_WakeupEventIntConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ht32f5xxxx_exti.o(i.EXTI_WakeupEventIntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVWUP_IRQHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[61]"></a>Exit_Init</STRONG> (Thumb, 390 bytes, Stack size 16 bytes, low_power_iniit.o(i.Exit_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Exit_Init &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_WakeupEventIntConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_WakeupEventConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InputConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_EXTISourceConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_init
</UL>

<P><STRONG><a name="[55]"></a>FLASH_ErasePage</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, ht32f5xxxx_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForOperationEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_arg_fun
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_erase
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coundownswitch_EraseWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coundownflag_EraseWrite
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_factor_reset_notify
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[115]"></a>FLASH_GetOptionByteStatus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ht32f5xxxx_flash.o(i.FLASH_GetOptionByteStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_GetOptionByteStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
</UL>

<P><STRONG><a name="[6b]"></a>FLASH_ProgramWordData</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ht32f5xxxx_flash.o(i.FLASH_ProgramWordData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForOperationEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_factor_reset_notify
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashGlobalCallBack
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[6a]"></a>FLASH_WaitForOperationEnd</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ht32f5xxxx_flash.o(i.FLASH_WaitForOperationEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForOperationEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[fa]"></a>GPIO_DirectionConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(i.GPIO_DirectionConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i4_GPIO_PIN_SET
</UL>

<P><STRONG><a name="[f9]"></a>GPIO_DriveConfig</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, ht32f5xxxx_gpio.o(i.GPIO_DriveConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_DriveConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[65]"></a>GPIO_InputConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(i.GPIO_InputConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i4_GPIO_PIN_SET
</UL>

<P><STRONG><a name="[63]"></a>GPIO_PullResistorConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(i.GPIO_PullResistorConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i4_GPIO_PIN_SET
</UL>

<P><STRONG><a name="[67]"></a>GPIO_ReadInBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(i.GPIO_ReadInBit))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_WriteOutBits</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32f5xxxx_gpio.o(i.GPIO_WriteOutBits))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tybn1_out_sleep_mode
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVD_BOD_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVWUP_IRQHandler
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LedTwinkle
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pwr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tybn1_join_sleep_mode
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDFlashing_1s
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNetworkLedFlashing
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDFlashingCALLBack
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LEDHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perc_Boundary_process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_perc_Boundary_process
</UL>

<P><STRONG><a name="[f]"></a>GPTM0_IRQHandler</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, ht32f5xxxx_01_it.o(i.GPTM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GPTM0_IRQHandler &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_ClearFlag
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>I4CalibraERRHander</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, tst_function.o(i.I4CalibraERRHander))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = I4CalibraERRHander &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_fault_update
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>

<P><STRONG><a name="[74]"></a>I4CompleteHandler</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, tst_function.o(i.I4CompleteHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = I4CompleteHandler &rArr; I4ReturnManualHandler &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_current_runtime
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnManualHandler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibration_test
</UL>

<P><STRONG><a name="[7b]"></a>I4CountdownDataClear</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, head.o(i.I4CountdownDataClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I4CountdownDataClear &rArr; usart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
</UL>

<P><STRONG><a name="[7f]"></a>I4CourseDirection</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, protocol.o(i.I4CourseDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I4CourseDirection &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
</UL>

<P><STRONG><a name="[80]"></a>I4LaunchHandler</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tst_function.o(i.I4LaunchHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = I4LaunchHandler &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibration_test
</UL>

<P><STRONG><a name="[82]"></a>I4ReturnJourneyHandler</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, tst_function.o(i.I4ReturnJourneyHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = I4ReturnJourneyHandler &rArr; stop_fun &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_fun
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibration_test
</UL>

<P><STRONG><a name="[75]"></a>I4ReturnManualHandler</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, tst_function.o(i.I4ReturnManualHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = I4ReturnManualHandler &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>

<P><STRONG><a name="[84]"></a>I4TimerDataClear</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, head.o(i.I4TimerDataClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I4TimerDataClear &rArr; usart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
</UL>

<P><STRONG><a name="[85]"></a>I4_FullInspection</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, head.o(i.I4_FullInspection))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = I4_FullInspection &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LedTwinkle
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[87]"></a>I4_LEDHandler</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, head.o(i.I4_LEDHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I4_LEDHandler &rArr; NoNetworkLedFlashing
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNetworkLedFlashing
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDFlashingCALLBack
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[86]"></a>I4_LedTwinkle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, head.o(i.I4_LedTwinkle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I4_LedTwinkle &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
</UL>

<P><STRONG><a name="[8a]"></a>I4_LockedRotorCallback</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, head.o(i.I4_LockedRotorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = I4_LockedRotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control_callback
</UL>

<P><STRONG><a name="[8b]"></a>I4_MainTask</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, head.o(i.I4_MainTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = I4_MainTask &rArr; bt_uart_service &rArr; data_handle &rArr; mcu_ota_proc &rArr; mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_service
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control_callback
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorDetection
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_Timecallback
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LEDHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibration_test
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>I4_ProductionTest</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, head.o(i.I4_ProductionTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = I4_ProductionTest &rArr; bt_uart_service &rArr; data_handle &rArr; mcu_ota_proc &rArr; mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LedTwinkle
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_service
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>I4_Timecallback</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, head.o(i.I4_Timecallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = I4_Timecallback &rArr; dp_download_curtain_countdown_time &rArr; mcu_dp_value_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_time_zone
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[88]"></a>LEDFlashingCALLBack</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, head.o(i.LEDFlashingCALLBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LEDFlashingCALLBack
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LEDHandler
</UL>

<P><STRONG><a name="[9a]"></a>LEDFlashing_1s</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, head.o(i.LEDFlashing_1s))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LEDFlashing_1s
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_setup_interrupt
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorDetection
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
</UL>

<P><STRONG><a name="[6]"></a>LVD_BOD_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ht32f5xxxx_01_it.o(i.LVD_BOD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LVD_BOD_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_GetLVDFlagStatus
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>LockedRotorDetection</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, head.o(i.LockedRotorDetection))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = LockedRotorDetection &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDFlashing_1s
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[9d]"></a>LockedRotorMotorCallback</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, head.o(i.LockedRotorMotorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
</UL>

<P><STRONG><a name="[a2]"></a>MCTM_CHMOECmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_mctm.o(i.MCTM_CHMOECmd))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>NoNetworkLedFlashing</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, head.o(i.NoNetworkLedFlashing))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NoNetworkLedFlashing
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LEDHandler
</UL>

<P><STRONG><a name="[9f]"></a>PB2_PWM_INIT</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, motor_init.o(i.PB2_PWM_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = PB2_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCTM_CHMOECmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBaseInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_OutputInit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_Cmd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
</UL>

<P><STRONG><a name="[a4]"></a>PB3_PWM_INIT</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, motor_init.o(i.PB3_PWM_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_ClearFlag
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBaseInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_OutputInit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_Cmd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
</UL>

<P><STRONG><a name="[10c]"></a>PWRCU_BODCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_BODCmd))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10b]"></a>PWRCU_BODRISConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_BODRISConfig))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>PWRCU_DeInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[104]"></a>PWRCU_DeepSleep2</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_DeepSleep2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWRCU_DeepSleep2
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[9b]"></a>PWRCU_GetLVDFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_GetLVDFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVD_BOD_IRQHandler
</UL>

<P><STRONG><a name="[10f]"></a>PWRCU_LVDCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_LVDCmd))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>PWRCU_LVDIntWakeupConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_LVDIntWakeupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>PWRCU_SetLVDS</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_pwrcu.o(i.PWRCU_SetLVDS))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>Pause_handler</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, head.o(i.Pause_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_current_runtime
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_delay_process_start
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorMotorCallback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Percentage_control
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorDetection
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>Percentage_control</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tst_function.o(i.Percentage_control))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_curtain_position
</UL>

<P><STRONG><a name="[a7]"></a>Production_test_Read_Byte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, head.o(i.Production_test_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Production_test_Read_Byte &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
</UL>

<P><STRONG><a name="[a9]"></a>Production_test_input</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, head.o(i.Production_test_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Production_test_input &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[d4]"></a>Queue_Read_Byte</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system.o(i.Queue_Read_Byte))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_service
</UL>

<P><STRONG><a name="[4c]"></a>RSTCU_PeripReset</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, ht32f5xxxx_rstcu.o(i.RSTCU_PeripReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_DeInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
</UL>

<P><STRONG><a name="[122]"></a>RTC_ClockSourceConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_ClockSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[126]"></a>RTC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[5b]"></a>RTC_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVWUP_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_Button_Process
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[aa]"></a>RTC_GetFlagStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[123]"></a>RTC_IntConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[120]"></a>RTC_LSECmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_LSECmd))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[11f]"></a>RTC_LSESMConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_LSESMConfig))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[ae]"></a>RTC_SetCompare</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_SetCompare))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[124]"></a>RTC_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[125]"></a>RTC_WakeupConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_rtc.o(i.RTC_WakeupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[127]"></a>SYSTICK_ClockSourceConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(i.SYSTICK_ClockSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
</UL>

<P><STRONG><a name="[11c]"></a>SYSTICK_CounterCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(i.SYSTICK_CounterCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
</UL>

<P><STRONG><a name="[129]"></a>SYSTICK_IntConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(i.SYSTICK_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
</UL>

<P><STRONG><a name="[128]"></a>SYSTICK_SetReloadValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32_cm0plus_misc.o(i.SYSTICK_SetReloadValue))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timing_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SystemInit</STRONG> (Thumb, 224 bytes, Stack size 20 bytes, system_ht32f5xxxx_02.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TM_ClearFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(i.TM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPTM0_IRQHandler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gptm0_onfiguration
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
</UL>

<P><STRONG><a name="[a3]"></a>TM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(i.TM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gptm0_onfiguration
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
</UL>

<P><STRONG><a name="[ac]"></a>TM_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ht32f5xxxx_tm.o(i.TM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TM_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSTCU_PeripReset
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[fd]"></a>TM_IntConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_tm.o(i.TM_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gptm0_onfiguration
</UL>

<P><STRONG><a name="[a1]"></a>TM_OutputInit</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, ht32f5xxxx_tm.o(i.TM_OutputInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TM_OutputInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
</UL>

<P><STRONG><a name="[a0]"></a>TM_TimeBaseInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ht32f5xxxx_tm.o(i.TM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gptm0_onfiguration
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
</UL>

<P><STRONG><a name="[f6]"></a>TimerFlashDataHandle</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, head.o(i.TimerFlashDataHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TimerFlashDataHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_setup_interrupt
</UL>

<P><STRONG><a name="[ad]"></a>Timing_echofun</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, tst_function.o(i.Timing_echofun))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Timing_echofun &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[8f]"></a>Timing_task_program</STRONG> (Thumb, 540 bytes, Stack size 24 bytes, tst_function.o(i.Timing_task_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Timing_task_program &rArr; perc_Boundary_process &rArr; timer_curtain_control &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCompare
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_real_time
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perc_Boundary_process
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_perc_Boundary_process
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_echofun
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_timing_data_processing
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[1b]"></a>UART0_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART0_IRQHandler &rArr; uart_receive_input
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive_input
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART0_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ht32f5xxxx_01_it.o(i.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART0_IRQHandler &rArr; Production_test_input &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Production_test_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>USART_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>USART_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output_fun
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>

<P><STRONG><a name="[b7]"></a>USART_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ht32f5xxxx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[12c]"></a>USART_IntConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[de]"></a>USART_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output_fun
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>

<P><STRONG><a name="[12d]"></a>USART_TxRxCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_usart.o(i.USART_TxRxCmd))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[56]"></a>WriteFlashGlobalCallBack</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tst_function.o(i.WriteFlashGlobalCallBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WriteFlashGlobalCallBack &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_arg_fun
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coundownswitch_EraseWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coundownflag_EraseWrite
</UL>

<P><STRONG><a name="[ba]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[146]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[59]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVD_BOD_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WAKEUP_Button_Process
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control_callback
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorDetection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountdownFlashDataHandle
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_fun
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perc_Boundary_process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4LaunchHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>

<P><STRONG><a name="[50]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ht32f5xxxx_ckcu.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClocksFrequency
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_uart_data_unpack
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_test_uart_data_unpack
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_echofun
</UL>

<P><STRONG><a name="[147]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[148]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[149]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[bc]"></a>adc_init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, adc_init.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = adc_init &rArr; ADC_DeInit &rArr; RSTCU_PeripReset
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularTrigConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularGroupConfig
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntConfig
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[b1]"></a>alarm_perc_Boundary_process</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, tst_function.o(i.alarm_perc_Boundary_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = alarm_perc_Boundary_process &rArr; timer_curtain_control &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[e5]"></a>all_data_update</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, protocol.o(i.all_data_update))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[c3]"></a>all_data_update_fun</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, mcu_transplant.o(i.all_data_update_fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = all_data_update_fun &rArr; mcu_dp_raw_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_calibrstatus
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4TimerDataClear
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CountdownDataClear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[f1]"></a>arg_erase_write</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tst_function.o(i.arg_erase_write))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[c5]"></a>bftm_onfiguration</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bftm_init.o(i.bftm_onfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bftm_onfiguration &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_SetCounter
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_SetCompare
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_OneShotModeCmd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_IntConfig
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BFTM_EnaCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>bt_factor_reset_notify</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, protocol.o(i.bt_factor_reset_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bt_factor_reset_notify &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[cc]"></a>bt_protocol_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mcu_api.o(i.bt_protocol_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_protocol_init
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>bt_send_mcu_ver</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, protocol.o(i.bt_send_mcu_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bt_send_mcu_ver &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>bt_test_uart_service</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, mcu_api.o(i.bt_test_uart_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = bt_test_uart_service &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_test
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Production_test_Read_Byte
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LedTwinkle
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_test_uart_data_unpack
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
</UL>

<P><STRONG><a name="[8e]"></a>bt_uart_service</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, mcu_api.o(i.bt_uart_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = bt_uart_service &rArr; data_handle &rArr; mcu_ota_proc &rArr; mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_queue_total_data
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_Read_Byte
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_uart_data_unpack
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[d0]"></a>bt_uart_write_frame</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, system.o(i.bt_uart_write_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sums
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_send_mcu_ver
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_offset_req
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_fault_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heat_beat_check
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_bt_mode
</UL>

<P><STRONG><a name="[116]"></a>byte_to_int</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mcu_api.o(i.byte_to_int))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
</UL>

<P><STRONG><a name="[8d]"></a>calibration_test</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tst_function.o(i.calibration_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = calibration_test &rArr; I4ReturnJourneyHandler &rArr; stop_fun &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnJourneyHandler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4LaunchHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[d9]"></a>check_battery_level</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, adc_init.o(i.check_battery_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = check_battery_level &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_fault_update
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_battery_value
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[96]"></a>check_time_zone</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, head.o(i.check_time_zone))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_Timecallback
</UL>

<P><STRONG><a name="[dc]"></a>clock_config</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, motor_init.o(i.clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = clock_config &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>close_curtain</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, motor_init.o(i.close_curtain))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = close_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pwr
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorMotorCallback
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LockedRotorCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnJourneyHandler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4LaunchHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>

<P><STRONG><a name="[d6]"></a>data_handle</STRONG> (Thumb, 710 bytes, Stack size 64 bytes, system.o(i.data_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = data_handle &rArr; mcu_ota_proc &rArr; mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_init_disconnect
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcmp
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_atoll
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heat_beat_check
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_bt_mode
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_download_cmd_total
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_factor_reset_notify
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_service
</UL>

<P><STRONG><a name="[112]"></a>delay1s</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mcu_ota_handler.o(i.delay1s))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_device_delay_restart
</UL>

<P><STRONG><a name="[ea]"></a>dismiss_bind</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, tst_function.o(i.dismiss_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dismiss_bind &rArr; uart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
</UL>

<P><STRONG><a name="[97]"></a>dp_curtain_timer_task</STRONG> (Thumb, 522 bytes, Stack size 32 bytes, protocol.o(i.dp_curtain_timer_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_curtain_timer_task &rArr; mcu_dp_raw_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_Timecallback
</UL>

<P><STRONG><a name="[99]"></a>dp_download_curtain_countdown_time</STRONG> (Thumb, 368 bytes, Stack size 280 bytes, protocol.o(i.dp_download_curtain_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = dp_download_curtain_countdown_time &rArr; mcu_dp_value_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_Timecallback
</UL>

<P><STRONG><a name="[e4]"></a>dp_download_handle</STRONG> (Thumb, 464 bytes, Stack size 24 bytes, protocol.o(i.dp_download_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = dp_download_handle &rArr; dp_download_curtain_countdown_time &rArr; mcu_dp_value_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_enum
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_fault_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arg_erase_write
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDFlashing_1s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurtainModeEraseWrite
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coundownswitch_EraseWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coundownflag_EraseWrite
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[21]"></a>fputc</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main_callfun.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[f5]"></a>fun_setup_interrupt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, head.o(i.fun_setup_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fun_setup_interrupt &rArr; CountdownFlashDataHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_real_time
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDFlashing_1s
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerFlashDataHandle
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountdownFlashDataHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>get_check_sum</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tybn1_init.o(i.get_check_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_check_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_test
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_calibrstatus
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4TimerDataClear
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CountdownDataClear
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_test_uart_data_unpack
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_battery_value
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_real_time
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_current_runtime
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dismiss_bind
</UL>

<P><STRONG><a name="[d7]"></a>get_check_sums</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system.o(i.get_check_sums))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_check_sums
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>

<P><STRONG><a name="[e3]"></a>get_download_cmd_total</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, protocol.o(i.get_download_cmd_total))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[e1]"></a>get_mcu_bt_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, system.o(i.get_mcu_bt_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_mcu_bt_mode &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[d3]"></a>get_queue_total_data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system.o(i.get_queue_total_data))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_service
</UL>

<P><STRONG><a name="[b3]"></a>get_real_time</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, tybn1_init.o(i.get_real_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_real_time &rArr; uart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_setup_interrupt
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[f7]"></a>global_arg_fun</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, tst_function.o(i.global_arg_fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = global_arg_fun &rArr; WriteFlashGlobalCallBack &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashGlobalCallBack
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>gpio_init</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, gpio_init.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gpio_init &rArr; i4_GPIO_PIN_SET &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InputConfig
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DriveConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pwr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i4_GPIO_PIN_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fc]"></a>gptm0_onfiguration</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gptm0_init.o(i.gptm0_onfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gptm0_onfiguration &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_ClearFlag
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_TimeBaseInit
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_IntConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_Cmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>heat_beat_check</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system.o(i.heat_beat_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = heat_beat_check &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_byte
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[12b]"></a>key_delay_process_callback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, head.o(i.key_delay_process_callback))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control_callback
</UL>

<P><STRONG><a name="[a6]"></a>key_delay_process_start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, head.o(i.key_delay_process_start))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control_callback
</UL>

<P><STRONG><a name="[ff]"></a>key_init</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, gpio_init.o(i.key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = key_init &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_IntConfig
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InputConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_EXTISourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[110]"></a>license_readback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.license_readback))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>low_power_consump_fun</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, head.o(i.low_power_consump_fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = low_power_consump_fun &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_WakeupEventIntConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearWakeupFlag
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_DeepSleep2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_DeInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tybn1_join_sleep_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[102]"></a>low_power_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, low_power_iniit.o(i.low_power_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = low_power_init &rArr; Exit_Init &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[20]"></a>main</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = main &rArr; I4_ProductionTest &rArr; bt_uart_service &rArr; data_handle &rArr; mcu_ota_proc &rArr; mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_fun
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_test
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gptm0_onfiguration
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_arg_fun
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_setup_interrupt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_send_mcu_ver
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_protocol_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bftm_onfiguration
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_SetLVDS
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_LVDIntWakeupConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_LVDCmd
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_BODRISConfig
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_BODCmd
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;license_readback
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[111]"></a>mcu_device_delay_restart</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mcu_ota_handler.o(i.mcu_device_delay_restart))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1s
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
</UL>

<P><STRONG><a name="[98]"></a>mcu_dp_bool_update</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, mcu_api.o(i.mcu_dp_bool_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcu_dp_bool_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_byte
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_Timecallback
</UL>

<P><STRONG><a name="[81]"></a>mcu_dp_enum_update</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mcu_api.o(i.mcu_dp_enum_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcu_dp_enum_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_byte
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_curtain_position
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorDetection
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4LaunchHandler
</UL>

<P><STRONG><a name="[72]"></a>mcu_dp_fault_update</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, mcu_api.o(i.mcu_dp_fault_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mcu_dp_fault_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_byte
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CalibraERRHander
</UL>

<P><STRONG><a name="[b0]"></a>mcu_dp_raw_update</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, mcu_api.o(i.mcu_dp_raw_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mcu_dp_raw_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_byte
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_curtain_timer_task
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[77]"></a>mcu_dp_value_update</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, mcu_api.o(i.mcu_dp_value_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcu_dp_value_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_byte
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_curtain_countdown_time
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_curtain_position
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
</UL>

<P><STRONG><a name="[113]"></a>mcu_flash_erase</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mcu_ota_handler.o(i.mcu_flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mcu_flash_erase &rArr; FLASH_ErasePage &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
</UL>

<P><STRONG><a name="[f3]"></a>mcu_flash_read</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, mcu_ota_handler.o(i.mcu_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mcu_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
</UL>

<P><STRONG><a name="[114]"></a>mcu_flash_write</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, mcu_ota_handler.o(i.mcu_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetOptionByteStatus
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_init_disconnect
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_offset_req
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
</UL>

<P><STRONG><a name="[ef]"></a>mcu_get_dp_download_enum</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcu_api.o(i.mcu_get_dp_download_enum))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[ee]"></a>mcu_get_dp_download_value</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, mcu_api.o(i.mcu_get_dp_download_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mcu_get_dp_download_value
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[cd]"></a>mcu_ota_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mcu_ota_handler.o(i.mcu_ota_init))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_protocol_init
</UL>

<P><STRONG><a name="[e2]"></a>mcu_ota_init_disconnect</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mcu_ota_handler.o(i.mcu_ota_init_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[e9]"></a>mcu_ota_proc</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, mcu_ota_handler.o(i.mcu_ota_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = mcu_ota_proc &rArr; mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_offset_req
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[dd]"></a>motor_pwr</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, motor_init.o(i.motor_pwr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = motor_pwr
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
</UL>

<P><STRONG><a name="[73]"></a>motor_stop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, motor_init.o(i.motor_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pwr
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_ProductionTest
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control_callback
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorMotorCallback
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LockedRotorCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_fun
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnManualHandler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4LaunchHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CalibraERRHander
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>

<P><STRONG><a name="[8c]"></a>motor_turn</STRONG> (Thumb, 524 bytes, Stack size 24 bytes, tst_function.o(i.motor_turn))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = motor_turn &rArr; timer_curtain_control &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInBit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pwr
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDFlashing_1s
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dismiss_bind
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[7a]"></a>ms_delay_systick</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, systick_init.o(i.ms_delay_systick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_CounterCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output_fun
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LedTwinkle
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_test_uart_data_unpack
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tybn1_join_sleep_mode
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorMotorCallback
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LockedRotorCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perc_Boundary_process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_perc_Boundary_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnJourneyHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
</UL>

<P><STRONG><a name="[e8]"></a>my_atoll</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, mcu_api.o(i.my_atoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = my_atoll &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[e6]"></a>my_memcmp</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mcu_api.o(i.my_memcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[e7]"></a>my_memcpy</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, mcu_api.o(i.my_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_uart_data_unpack
</UL>

<P><STRONG><a name="[a8]"></a>my_memset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mcu_api.o(i.my_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Production_test_input
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Production_test_Read_Byte
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_service
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_uart_data_unpack
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_common_test_uart_data_unpack
</UL>

<P><STRONG><a name="[11d]"></a>my_strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mcu_api.o(i.my_strlen))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
</UL>

<P><STRONG><a name="[79]"></a>open_curtain</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, motor_init.o(i.open_curtain))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB3_PWM_INIT
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB2_PWM_INIT
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pwr
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockedRotorMotorCallback
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LockedRotorCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_FullInspection
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnJourneyHandler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4LaunchHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>

<P><STRONG><a name="[af]"></a>perc_Boundary_process</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tst_function.o(i.perc_Boundary_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = perc_Boundary_process &rArr; timer_curtain_control &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[e0]"></a>product_info_update</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, system.o(i.product_info_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = product_info_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[d2]"></a>rf_test</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, head.o(i.rf_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rf_test &rArr; uart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
</UL>

<P><STRONG><a name="[109]"></a>rtc_init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, rtc_init.o(i.rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetClockReadyStatus
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeupConfig
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCompare
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_LSESMConfig
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_LSECmd
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IntConfig
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Cmd
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClockSourceConfig
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWRCU_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>set_bt_uart_buffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, system.o(i.set_bt_uart_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_bt_uart_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_send_mcu_ver
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_offset_req
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
</UL>

<P><STRONG><a name="[fe]"></a>set_bt_uart_byte</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system.o(i.set_bt_uart_byte))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_fault_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heat_beat_check
</UL>

<P><STRONG><a name="[83]"></a>stop_fun</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, tst_function.o(i.stop_fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stop_fun &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnJourneyHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManualCalibraCallBack
</UL>

<P><STRONG><a name="[10a]"></a>systick_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, systick_init.o(i.systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = systick_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_SetReloadValue
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_IntConfig
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_ClockSourceConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>timer_curtain_control</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, protocol.o(i.timer_curtain_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = timer_curtain_control &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_current_runtime
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CourseDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_control_handle
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perc_Boundary_process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_turn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_perc_Boundary_process
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_timing_data_processing
</UL>

<P><STRONG><a name="[91]"></a>timer_curtain_control_callback</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, head.o(i.timer_curtain_control_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = timer_curtain_control_callback &rArr; I4_LockedRotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_curtain_position
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_delay_process_start
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_delay_process_callback
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_LockedRotorCallback
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4_MainTask
</UL>

<P><STRONG><a name="[ab]"></a>timing_delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick_init.o(i.timing_delay))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[103]"></a>tybn1_join_sleep_mode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tybn1_init.o(i.tybn1_join_sleep_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tybn1_join_sleep_mode &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consump_fun
</UL>

<P><STRONG><a name="[5c]"></a>tybn1_out_sleep_mode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, protocol.o(i.tybn1_out_sleep_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tybn1_out_sleep_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVWUP_IRQHandler
</UL>

<P><STRONG><a name="[107]"></a>uart0_init</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, uart0_init.o(i.uart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = uart0_init &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxRxCmd
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IntConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>uart0_send</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, uart0_init.o(i.uart0_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_test
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_calibrstatus
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4TimerDataClear
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CountdownDataClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_battery_value
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_real_time
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_current_runtime
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dismiss_bind
</UL>

<P><STRONG><a name="[b5]"></a>uart_receive_input</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, mcu_api.o(i.uart_receive_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_receive_input
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>uart_transmit_output</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, protocol.o(i.uart_transmit_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output_fun
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>

<P><STRONG><a name="[12e]"></a>uart_transmit_output_fun</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, mcu_transplant.o(i.uart_transmit_output_fun))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output
</UL>

<P><STRONG><a name="[db]"></a>update_battery_value</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tst_function.o(i.update_battery_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = update_battery_value &rArr; uart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_level
</UL>

<P><STRONG><a name="[c4]"></a>update_calibrstatus</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, head.o(i.update_calibrstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = update_calibrstatus &rArr; uart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update_fun
</UL>

<P><STRONG><a name="[76]"></a>update_current_runtime</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, protocol.o(i.update_current_runtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = update_current_runtime &rArr; uart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_curtain_position
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CompleteHandler
</UL>

<P><STRONG><a name="[12a]"></a>update_curtain_position</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, head.o(i.update_curtain_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = update_curtain_position &rArr; mcu_dp_value_update &rArr; bt_uart_write_frame &rArr; uart_transmit_output &rArr; uart_transmit_output_fun &rArr; ms_delay_systick
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_current_runtime
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Percentage_control
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control_callback
</UL>

<P><STRONG><a name="[108]"></a>usart0_init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, usart0_init.o(i.usart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = usart0_init &rArr; USART_Init &rArr; CKCU_GetPeripFrequency &rArr; CKCU_GetClocksFrequency &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxRxCmd
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IntConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>usart0_send</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, usart0_init.o(i.usart0_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart0_send
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4TimerDataClear
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CountdownDataClear
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[106]"></a>version_fun</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, head.o(i.version_fun))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[60]"></a>WAKEUP_Button_Process</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, ht32f5xxxx_01_it.o(i.WAKEUP_Button_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WAKEUP_Button_Process &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetEdgeStatus
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearEdgeFlag
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[1d]"></a>BootProcess</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, startup_ht32f5xxxx_01.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_01.o(RESET)
</UL>
<P><STRONG><a name="[d1]"></a>mcu_common_test_uart_data_unpack</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, mcu_api.o(i.mcu_common_test_uart_data_unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mcu_common_test_uart_data_unpack &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_test_uart_service
</UL>

<P><STRONG><a name="[d5]"></a>mcu_common_uart_data_unpack</STRONG> (Thumb, 248 bytes, Stack size 20 bytes, mcu_api.o(i.mcu_common_uart_data_unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mcu_common_uart_data_unpack &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_service
</UL>

<P><STRONG><a name="[f4]"></a>crc32_compute</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, mcu_ota_handler.o(i.crc32_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_data_req
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
</UL>

<P><STRONG><a name="[f2]"></a>file_crc_check_in_flash</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, mcu_ota_handler.o(i.file_crc_check_in_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = file_crc_check_in_flash &rArr; mcu_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_read
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_compute
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_data_write_request_sched
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_file_info_req
</UL>

<P><STRONG><a name="[117]"></a>mcu_ota_data_req</STRONG> (Thumb, 284 bytes, Stack size 288 bytes, mcu_ota_handler.o(i.mcu_ota_data_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = mcu_ota_data_req &rArr; mcu_ota_init_disconnect &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_init_disconnect
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_erase
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_compute
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
</UL>

<P><STRONG><a name="[118]"></a>mcu_ota_file_info_req</STRONG> (Thumb, 376 bytes, Stack size 72 bytes, mcu_ota_handler.o(i.mcu_ota_file_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mcu_ota_file_info_req &rArr; file_crc_check_in_flash &rArr; mcu_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
</UL>

<P><STRONG><a name="[11a]"></a>mcu_ota_offset_req</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, mcu_ota_handler.o(i.mcu_ota_offset_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mcu_ota_offset_req &rArr; mcu_flash_write &rArr; FLASH_ProgramWordData &rArr; FLASH_WaitForOperationEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
</UL>

<P><STRONG><a name="[11b]"></a>on_data_write_request_sched</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, mcu_ota_handler.o(i.on_data_write_request_sched))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = on_data_write_request_sched &rArr; file_crc_check_in_flash &rArr; mcu_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWordData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_init_disconnect
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_flash_write
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_device_delay_restart
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bt_uart_buffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_uart_write_frame
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_ota_proc
</UL>

<P><STRONG><a name="[ed]"></a>dp_download_control_handle</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, protocol.o(i.dp_download_control_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = dp_download_control_handle &rArr; timer_curtain_control &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteOutBits
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ms_delay_systick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[fb]"></a>i4_GPIO_PIN_SET</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gpio_init.o(i.i4_GPIO_PIN_SET))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i4_GPIO_PIN_SET &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PullResistorConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InputConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[69]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, low_power_iniit.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_Init
</UL>

<P><STRONG><a name="[52]"></a>Common_timing_data_processing</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tst_function.o(i.Common_timing_data_processing))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Common_timing_data_processing &rArr; timer_curtain_control &rArr; Pause_handler &rArr; LockedRotorMotorCallback &rArr; open_curtain &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_curtain_control
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timing_task_program
</UL>

<P><STRONG><a name="[9e]"></a>ManualCalibraCallBack</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, tst_function.o(i.ManualCalibraCallBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ManualCalibraCallBack &rArr; stop_fun &rArr; motor_stop &rArr; PB3_PWM_INIT &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_curtain
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_curtain
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_fun
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4ReturnManualHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4CalibraERRHander
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibration_test
</UL>

<P><STRONG><a name="[bb]"></a>_printf_core</STRONG> (Thumb, 688 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
